- name: Install prerequistes
  ansible.builtin.apt:
    name:
      - zip
      - unzip

- name: Download ASDF zip
  ansible.builtin.get_url:
    url: "{{ app_repository_url }}"
    dest: "{{ app_tmp_file }}"
    owner: "{{ ansible_env.SUDO_USER }}"
    group: "{{ ansible_env.SUDO_USER }}"
    mode: "0750"

- name: Create tmp ASDF directory
  ansible.builtin.file:
    state: directory
    path: "{{ app_temp_path }}"
    owner: "{{ ansible_env.SUDO_USER }}"
    group: "{{ ansible_env.SUDO_USER }}"
    mode: "0750"

- name: Extract ASDF archive to temporary path
  ansible.builtin.unarchive:
    src: "{{ app_tmp_file }}"
    dest: "{{ app_temp_path }}"
    remote_src: true

- name: Create ASDF directory
  ansible.builtin.file:
    state: directory
    path: "{{ app_home }}"
    owner: "{{ ansible_env.SUDO_USER }}"
    group: "{{ ansible_env.SUDO_USER }}"
    mode: "0750"

- name: Install ASDF To Correct Folder
  ansible.builtin.copy:
    remote_src: true
    src: "{{ app_temp_path }}/{{ app_name }}-{{ app_version }}/"
    dest: "{{ app_home }}/"
    owner: "{{ ansible_env.SUDO_USER }}"
    group: "{{ ansible_env.SUDO_USER }}"
    mode: "0750"

- name: Creates Symlink
  ansible.builtin.file:
    state: link
    src: "{{ binary_source_path }}"
    dest: "{{ binary_dest_path }}"
    owner: "{{ ansible_env.SUDO_USER }}"
    group: "{{ ansible_env.SUDO_USER }}"
    mode: "0750"

- name: Create Profiler
  ansible.builtin.copy:
    dest: "{{ app_bash_completition_path }}"
    content: |
      {{ app_bash_completition_content }}
    owner: root
    group: root
    mode: "0555"

- name: Clean Up ASDF
  block:
    - name: Remove Temp Folder
      ansible.builtin.file:
        state: absent
        path: "{{ app_temp_path }}"
    - name: Remove Temp File
      ansible.builtin.file:
        state: absent
        path: "{{ app_tmp_file }}"
